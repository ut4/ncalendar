/*
 nullcalendar v0.2.0
 https://github.com/ut4/ncalendar
 @license BSD-3-Clause
*/
'use strict';(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.nullcalendar=factory()})(this,function(){if(window.Inferno){window.React=Inferno;window.React.ON_INPUT="onInput";window.ReactDOM=Inferno}else if(window.preact){window.React=preact;window.React.ON_INPUT="onInput";window.ReactDOM={render:(component,containerNode,replaceNode)=>preact.render(component,containerNode,replaceNode)._component}}else if(window.React)window.React.ON_INPUT=
"onChange";else throw new Error("nullcalendar tarvitsee Inferno, preact, tai React'n toimiakseen");window.$el=React.createElement;class Modal extends React.Component{constructor(props){super(props);this.state={contentConstruct:null}}open(construct){this.setState({contentConstruct:construct})}close(){this.setState({contentConstruct:null})}render(){return this.state.contentConstruct?$el("div",{className:"modal"},$el("div",{className:"modal-content"},$el(this.state.contentConstruct.Component,Object.assign({},
this.state.contentConstruct.props,{closeModal:()=>this.close()})))):null}}var Constants=Object.freeze({VIEW_DAY:"day",VIEW_WEEK:"week",VIEW_MONTH:"month",VIEW_DEFAULT:"week",HOURS_IN_DAY:24,DAYS_IN_WEEK:7});const titleFormatters={[Constants.VIEW_DAY]:(dateCursorRange,dateUtils)=>"%1, %2".replace("%1",dateUtils.format(dateCursorRange.start,{day:"numeric",month:"long"})).replace("%2",dateCursorRange.start.getFullYear()),[Constants.VIEW_WEEK]:(dateCursorRange,dateUtils)=>"%1 %2 - %3 %4".replace("%1",
dateUtils.format(dateCursorRange.start,{month:"short"})).replace("%2",dateCursorRange.start.getDate()).replace("%3",dateCursorRange.end.getDate()).replace("%4",dateCursorRange.start.getFullYear()),[Constants.VIEW_MONTH]:(dateCursorRange,dateUtils)=>dateUtils.format(dateCursorRange.start,{month:"long",year:"numeric"})};class Toolbar extends React.Component{constructor(props){super(props);this.partGenerators=new PartGenerators(props)}render(){return $el("div",{className:"toolbar"},$el("div",{className:"row"},
this.props.parts.split("|").map((group,r)=>$el("div",{className:"col",key:r},group.split(",").map((partName)=>this.partGenerators[partName]())))))}}class PartGenerators{constructor(props){this.ctrl=props.calendarController;this.props=props}prev(){return $el("button",{onClick:()=>this.ctrl.dateCursor.prev(),key:"prev"},"<")}next(){return $el("button",{onClick:()=>this.ctrl.dateCursor.next(),key:"next"},">")}today(){return $el("button",{onClick:()=>this.ctrl.dateCursor.reset(),key:"today"},"T\u00e4n\u00e4\u00e4n")}title(){return $el("h2",
{key:"title"},(this.props.titleFormatter||titleFormatters[this.ctrl.currentView])(this.ctrl.dateCursor.range,this.props.dateUtils))}month(){return $el("button",{onClick:()=>{this.ctrl.changeView(Constants.VIEW_MONTH)},key:"month"},"Kuukausi")}week(){return $el("button",{onClick:()=>{this.ctrl.changeView(Constants.VIEW_WEEK)},key:"week"},"Viikko")}day(){return $el("button",{onClick:()=>{this.ctrl.changeView(Constants.VIEW_DAY)},key:"day"},"P\u00e4iv\u00e4")}fill(){return null}}const validPartNames=
Object.getOwnPropertyNames(PartGenerators.prototype).filter((prop)=>prop!=="constructor");const register={};class ContentLayerFactory{register(name,constructorOrFactory){if(this.isRegistered(name))throw new Error(`Layer "${name}" on jo rekister\u00f6ity.`);if(typeof constructorOrFactory!=="function")throw new Error("Rekister\u00f6it\u00e4v\u00e4 itemi tulisi olla luokka, tai funktio.");register[name]=constructorOrFactory}isRegistered(name){return register.hasOwnProperty(name)}make(layer,args){if(typeof layer!==
"string"){layer.args&&(args=layer.args(...args));layer=layer.name||""}const item=register[layer];if(!item)throw new Error(`Layeria "${layer}" ei ole rekister\u00f6ity.`);if(!isValidContentLayer(item.prototype)){const providedLayer=item(...args);if(!isValidContentLayer(providedLayer))throw new Error("Sis\u00e4lt\u00f6kerros-factory:n palauttama instanssi "+' tulisi implementoida metodit "load", ja "decorateCell"');return providedLayer}else return new item(...args)}}function isValidContentLayer(obj){return obj&&
typeof obj.load==="function"&&typeof obj.decorateCell==="function"}const HOURS_ARRAY=Array.from(Array(Constants.HOURS_IN_DAY).keys());const LoadType=Object.freeze({INITIAL:"initial",NAVIGATION:"navigation",VIEW_CHANGE:"view-change"});class Content extends React.Component{constructor(props){super(props);const selectedContentLayers=this.props.calendarController.settings.contentLayers;this.hasAsyncContent=selectedContentLayers.length>0;this.state={currentlyHasAsyncContent:undefined};if(this.hasAsyncContent){const contentLayerFactory=
new ContentLayerFactory;this.contentLayers=selectedContentLayers.map((layerConfig)=>contentLayerFactory.make(layerConfig,[this.newController(),this.props.calendarController]));this.loadAsyncContent(LoadType.INITIAL)}}resetGrid(){return this.props.grid.map((rows)=>rows.map((cell)=>{if(cell&&!(cell instanceof ImmutableCell)){cell.children=[];cell.clickHandlers=[]}}))}componentWillReceiveProps(props){if(this.hasAsyncContent){this.setState({currentlyHasAsyncContent:undefined});this.loadAsyncContent(props.currentView===
this.props.currentView?LoadType.NAVIGATION:LoadType.VIEW_CHANGE)}}shouldComponentUpdate(_,state){return state.currentlyHasAsyncContent!==false}loadAsyncContent(loadType){return Promise.all(this.contentLayers.map((layer)=>layer.load(loadType))).then((returnValues)=>{const layersWhichMaybeHadContent=this.contentLayers.filter((layer,i)=>returnValues[i]!==false);if(layersWhichMaybeHadContent.length>0){this.applyAsyncContent(layersWhichMaybeHadContent);this.setState({currentlyHasAsyncContent:true})}})}applyAsyncContent(layersToLoad){this.resetGrid();
(layersToLoad||this.contentLayers).forEach((layer)=>{this.props.grid.forEach((row)=>{row.forEach((cell)=>{cell instanceof Cell&&layer.decorateCell(cell)})})})}newCell(cell,key){let content;if(!cell)content=null;else if(!cell.children||!cell.children.length)content=cell.content;else content=this.nestedContent(cell);const attrs={className:"cell"};if(cell&&cell.clickHandlers&&cell.clickHandlers.length)attrs.onClick=(e)=>{if(e.which&&e.which!==1)return;cell.clickHandlers.forEach((fn)=>fn(cell,e))};return $el("div",
{className:"col"+(cell&&cell.isCurrentDay?" current":""),key},$el("div",attrs,$el("div",null,content)))}nestedContent(cell){const children=cell.children.map((child,i)=>$el(child.Component,Object.assign({},child.props,{key:i}),child.content));return cell.content?[$el("span",null,cell.content)].concat(children):children}newController(){return{LoadType,Cell,PlaceholderCell,refresh:()=>{this.applyAsyncContent();this.forceUpdate()},reRender:()=>{this.forceUpdate()},getRenderedGrid:()=>this.mainEl}}render(){return $el("div",
{className:"main",ref:(el)=>{this.mainEl=el}},this.props.grid.map((row,rowIndex)=>$el("div",{className:"row",key:rowIndex},row.map((cell,colIndex)=>this.newCell(cell,rowIndex+"."+colIndex)))))}}class Cell{constructor(content,date,isCurrentDay){this.content=content;this.date=date;this.isCurrentDay=isCurrentDay;this.children=[];this.clickHandlers=[]}}class PlaceholderCell extends Cell{}class ImmutableCell{constructor(content){this.content=content}}class ComponentConstruct{constructor(Component,props,
content){this.Component=Component;this.props=props;this.content=content}}class AbstractViewLayout{constructor(dateCursor,dateUtils){this.dateCursor=dateCursor;this.dateUtils=dateUtils}getParts(compactFormShouldBeUsed){return!compactFormShouldBeUsed?this.getFullLayout():this.getCompactLayout()}getFullLayout(){return[new ComponentConstruct(Header,{items:this.getHeaderCells()}),new ComponentConstruct(Content,{gridGeneratorFn:()=>this.getFullGrid()})]}getCompactLayout(){return[null,new ComponentConstruct(Content,
{gridGeneratorFn:()=>this.getCompactGrid()})]}}class Header extends React.Component{render(){return $el("div",{className:"header"},$el("div",{className:"row"},this.props.items.map((item,i)=>$el("div",{key:i+item,className:"col"},$el("div",{className:"cell"},item)))))}}class DayViewLayout extends AbstractViewLayout{getHeaderCells(){return["",this.dateUtils.format(this.dateCursor.range.start,{weekday:"long"})]}getCompactLayout(){return this.getFullLayout()}getFullGrid(){const rollingDate=new Date(this.dateCursor.range.start);
const isToday=rollingDate.toDateString()===(new Date).toDateString();return HOURS_ARRAY.map((hour)=>{rollingDate.setHours(hour);return[new ImmutableCell(this.dateUtils.formatHour(hour)),new Cell(null,new Date(rollingDate),isToday)]})}}class WeekViewLayout extends AbstractViewLayout{getHeaderCells(){return[""].concat(this.dateUtils.getFormattedWeekDays(this.dateCursor.range.start,"short"))}getFullGrid(){return this.markCurrentDayColumn(HOURS_ARRAY.map((hour)=>{const rollingDate=new Date(this.dateCursor.range.start);
rollingDate.setHours(hour);const row=[new ImmutableCell(this.dateUtils.formatHour(hour))];while(row.push(new Cell(null,new Date(rollingDate)))<=Constants.DAYS_IN_WEEK)rollingDate.setDate(rollingDate.getDate()+1);return row}))}getCompactGrid(){const dayNames=this.dateUtils.getFormattedWeekDays(this.dateCursor.range.start,"long");const rollingDate=new Date(this.dateCursor.range.start);const getDateAndMoveToNexDay=()=>{const d=new Date(rollingDate);rollingDate.setDate(rollingDate.getDate()+1);return d};
return this.markCurrentDayColumn([[new Cell(dayNames[0],getDateAndMoveToNexDay()),new Cell(dayNames[1],getDateAndMoveToNexDay())],[new Cell(dayNames[2],getDateAndMoveToNexDay()),new Cell(dayNames[3],getDateAndMoveToNexDay())],[new Cell(dayNames[4],getDateAndMoveToNexDay()),new Cell(dayNames[5],getDateAndMoveToNexDay())],[new Cell(dayNames[6],getDateAndMoveToNexDay()),new PlaceholderCell(null,null)]],true)}markCurrentDayColumn(grid,isCompactView){const now=new Date;if(this.dateUtils.getStartOfWeek(now).toDateString()===
this.dateCursor.range.start.toDateString()){const colIndex=now.getDay()||7;if(!isCompactView)grid.forEach((row)=>{row[colIndex].isCurrentDay=true});else grid[Math.round(colIndex/2)-1][!(colIndex%2)?1:0].isCurrentDay=true}return grid}}class MonthViewLayout extends AbstractViewLayout{getHeaderCells(){return[""].concat(this.dateUtils.getFormattedWeekDays(this.dateCursor.range.start,"long"))}getFullGrid(){const d=new Date(this.dateCursor.range.start);const currentDayDateStr=(new Date).toDateString();
return this.generateGrid(Constants.DAYS_IN_WEEK,(d)=>new Cell(d.getDate(),new Date(d),d.toDateString()===currentDayDateStr)).map((row)=>{row.unshift(new ImmutableCell(this.dateUtils.getWeekNumber(d)));d.setDate(d.getDate()+7);return row})}getCompactGrid(){const dayNames=this.dateUtils.getFormattedWeekDays(this.dateCursor.range.start,"short");const currentDayDateStr=(new Date).toDateString();return this.generateGrid(2,(d)=>{const dateAndDayName=d.getDate()+" "+dayNames[(d.getDay()||7)-1];return new Cell(d.getDay()!==
1&&d.getDate()>1?dateAndDayName:[dateAndDayName,$el("span",null," / Vk"+this.dateUtils.getWeekNumber(d))],new Date(d),d.toDateString()===currentDayDateStr)})}generateGrid(gridWidth,formatFn){const startDate=this.dateCursor.range.start;const rollingDate=new Date(startDate);const grid=[];let row=[];if(gridWidth===Constants.DAYS_IN_WEEK){row.length=(startDate.getDay()||7)-1;row.fill(undefined)}while(rollingDate.getMonth()===startDate.getMonth()){row.push(formatFn(rollingDate));if(row.length===gridWidth){grid.push(row);
row=[]}rollingDate.setDate(rollingDate.getDate()+1)}if(row.length){while(row.push(undefined)<gridWidth);grid.push(row)}return grid}}var ViewLayouts={[Constants.VIEW_DAY]:DayViewLayout,[Constants.VIEW_WEEK]:WeekViewLayout,[Constants.VIEW_MONTH]:MonthViewLayout};class DayViewCursorRange{constructor(dateUtils,startDateOrRangeOfPreviousView){const d=getBasedate(startDateOrRangeOfPreviousView,DayViewCursorRange.lastRange);if(d instanceof Date){this.start=dateUtils.getStartOfDay(d);this.end=dateUtils.getEndOfDay(d)}else{this.start=
d.start;this.end=d.end}}goForward(){this.start.setDate(this.start.getDate()+1);this.end.setDate(this.end.getDate()+1)}goBackwards(){this.start.setDate(this.start.getDate()-1);this.end.setDate(this.end.getDate()-1)}}class WeekViewCursorRange{constructor(dateUtils,startDateOrRangeOfPreviousView){const d=getBasedate(startDateOrRangeOfPreviousView,WeekViewCursorRange.lastRange);if(d instanceof Date){this.start=dateUtils.getStartOfWeek(dateUtils.getStartOfDay(d));this.end=dateUtils.getEndOfDay(this.start);
this.end.setDate(this.start.getDate()+6)}else{this.start=d.start;this.end=d.end}}goForward(){this.start.setDate(this.start.getDate()+Constants.DAYS_IN_WEEK);this.end.setDate(this.end.getDate()+Constants.DAYS_IN_WEEK)}goBackwards(){this.start.setDate(this.start.getDate()-Constants.DAYS_IN_WEEK);this.end.setDate(this.end.getDate()-Constants.DAYS_IN_WEEK)}}class MonthViewCursorRange{constructor(dateUtils,startDateOrRangeOfPreviousView){const baseDate=startDateOrRangeOfPreviousView.start||startDateOrRangeOfPreviousView;
this.start=dateUtils.getStartOfDay(baseDate);this.start.setDate(1);this.end=dateUtils.getEndOfDay(this.start);this.end.setMonth(this.start.getMonth()+1);this.end.setDate(0)}goForward(){this.start.setMonth(this.start.getMonth()+1);this.start.setDate(1);this.end.setMonth(this.end.getMonth()+2);this.end.setDate(0)}goBackwards(){this.start.setMonth(this.start.getMonth()-1);this.start.setDate(1);this.end.setDate(0)}}function getBasedate(startDateOrRangeOfPreviousView,lastSavedRange){if(startDateOrRangeOfPreviousView instanceof
Date)return startDateOrRangeOfPreviousView;if(lastSavedRange&&isWithinRange(lastSavedRange.start,startDateOrRangeOfPreviousView))return lastSavedRange;const d=new Date;return!isWithinRange(d,startDateOrRangeOfPreviousView)?startDateOrRangeOfPreviousView.start:d}function isWithinRange(date,range){return date>=range.start&&date<=range.end}class DateCursor{constructor(range,dateUtils,subscribeFn){this.range=range;this.dateUtils=dateUtils;saveRange(this.range);if(subscribeFn)this.notify=subscribeFn}next(){this.range.goForward();
saveRange(this.range);this.notify("next")}prev(){this.range.goBackwards();saveRange(this.range);this.notify("prev")}reset(){this.range=new this.range.constructor(this.dateUtils,new Date);saveRange(this.range);this.notify("reset")}goTo(){this.notify("goTo")}}function saveRange(range){range.constructor.lastRange={start:new Date(range.start),end:new Date(range.end)}}const cursorRanges={[Constants.VIEW_DAY]:DayViewCursorRange,[Constants.VIEW_WEEK]:WeekViewCursorRange,[Constants.VIEW_MONTH]:MonthViewCursorRange};
class DateCursorFactory{constructor(dateUtils){this.dateUtils=dateUtils}newCursor(viewName,startDateOrRangeFromPreviousView,subscriberFn){return new DateCursor(new cursorRanges[viewName](this.dateUtils,startDateOrRangeFromPreviousView||new Date),this.dateUtils,subscriberFn)}}function validateViewKey(viewNameKey){const lookedUpViewName=Constants["VIEW_"+viewNameKey.toUpperCase()];if(!lookedUpViewName)return'N\u00e4kym\u00e4\u00e4 "'+viewNameKey+'" ei l\u00f6ytynyt'}function validateDefaultDate(candidate){if(!(candidate instanceof
Date))return"defaultDate-asetus tulisi olla Date-instanssi"}function validateLayers(candidate){if(!Array.isArray(candidate))return"contentLayers-asetus tulisi olla taulukko"}function validateToolbarParts(candidate){if(typeof candidate!=="string")return"toolbarParts-asetus tulisi olla merkkijono. esim 'prev,next|title|day,week'";for(const part of candidate.replace(/\|/g,",").split(","))if(validPartNames.indexOf(part)<0)return'titlePart "'+part+'" ei ole validi. Tuetut arvot: '+validPartNames.join(",")}
function validateFormatters(candidate){for(const viewNameKey in candidate){if(typeof candidate[viewNameKey]!=="function")return"titleFormatters["+viewNameKey+"] pit\u00e4isi olla funktio";const hintForBadViewName=validateViewKey(viewNameKey);if(hintForBadViewName)return hintForBadViewName}}function validateBreakPoint(candidate){if(!Number.isInteger(candidate))return"layoutChangeBreakPoint-asetus tulisi olla kokonaisluku"}function validateLocale(candidate){if(!Array.isArray(candidate)&&typeof candidate!==
"string")return"locale-asetus tulisi olla merkkijono tai taulukko"}function getValidValue(value,validator,defaultValue){if(value===undefined)return defaultValue;const error=validator(value)||null;if(error)throw new Error(error);return value}const getValidViewName=(value)=>getValidValue(value,validateViewKey,Constants.VIEW_DEFAULT);var settingsFactory=(userSettings)=>({defaultView:getValidViewName(userSettings.defaultView),defaultDate:getValidValue(userSettings.defaultDate,validateDefaultDate,new Date),
contentLayers:getValidValue(userSettings.contentLayers,validateLayers,[]),toolbarParts:getValidValue(userSettings.toolbarParts,validateToolbarParts,"prev,next,today|title|month,week,day"),titleFormatters:getValidValue(userSettings.titleFormatters,validateFormatters,{}),layoutChangeBreakPoint:getValidValue(userSettings.layoutChangeBreakPoint,validateBreakPoint,800),locale:getValidValue(userSettings.locale,validateLocale,undefined)});const EMPTY_WEEK=Array.from(Array(7));class DateUtils{constructor(locale){this.locale=
locale}getWeekNumber(date){const d=new Date(date);d.setHours(0,0,0,0);d.setDate(d.getDate()+4-(d.getDay()||7));return Math.ceil(((d-new Date(d.getFullYear(),0,1))/864E5+1)/7)}getEstimatedFirstDayOfWeek(){return(new Date(2017,5,5,12,0,0,0)).getDay()}getStartOfWeek(date){const firstDay=this.getEstimatedFirstDayOfWeek();const d=new Date(date);d.setDate(date.getDate()-(7+date.getDay()-firstDay)%7);return d}getFormattedWeekDays(date,form){const d=this.getStartOfWeek(date);return EMPTY_WEEK.map(()=>{const formatted=
this.format(d,{weekday:form});d.setDate(d.getDate()+1);return formatted})}getStartOfDay(date){const start=new Date(date);start.setHours(0);start.setMinutes(0);start.setSeconds(0);start.setMilliseconds(0);return start}getEndOfDay(date){const end=new Date(date);end.setHours(23);end.setMinutes(59);end.setSeconds(59);end.setMilliseconds(999);return end}formatHour(hour){return(hour<10?"0":"")+hour+":00"}format(date,options){return date.toLocaleString(this.locale,options)}}class CalendarLayout extends React.Component{constructor(props){super(props);
this.settings=settingsFactory(this.props);this.smallScreenMediaQuery=window.matchMedia(`(max-width:${this.settings.layoutChangeBreakPoint}px)`);this.dateUtils=new DateUtils(this.settings.locale);this.dateCursorFactory=new DateCursorFactory(this.dateUtils);const state={dateCursor:this.newDateCursor(this.settings.defaultView)};state.currentView=this.settings.defaultView;state.viewLayout=this.newViewLayout(state.currentView,state.dateCursor);state.isWindowNarrowerThanBreakPoint=this.smallScreenMediaQuery.matches;
this.state=state;this.controller=newController(this)}componentWillMount(){this.smallScreenMediaQuery.addListener(this.viewPortListener.bind(this))}getController(){return this.controller}changeView(to){const newView=getValidViewName(to);if(this.state.currentView===newView)return;const state={dateCursor:this.newDateCursor(newView,this.state.dateCursor.range)};state.currentView=newView;state.viewLayout=this.newViewLayout(newView,state.dateCursor);this.setState(state)}viewPortListener(newMatch){const newIsNarrower=
newMatch.matches;if(newIsNarrower!==this.state.isWindowNarrowerThanBreakPoint)this.setState({isWindowNarrowerThanBreakPoint:newIsNarrower})}newDateCursor(viewName,lastViewsRange){return this.dateCursorFactory.newCursor(viewName,lastViewsRange||this.settings.defaultDate,()=>{this.setState({dateCursor:this.state.dateCursor})})}newViewLayout(viewName,dateCursor){return new ViewLayouts[viewName](dateCursor,this.dateUtils)}render(){let className="cal "+this.state.currentView;if(this.state.isWindowNarrowerThanBreakPoint&&
this.state.currentView!==Constants.VIEW_DAY)className+="-compact compact";const [header,content]=this.state.viewLayout.getParts(this.state.isWindowNarrowerThanBreakPoint);return $el("div",{className},$el(Modal,{ref:(cmp)=>{this.modal=cmp}}),$el(Toolbar,{parts:this.settings.toolbarParts,calendarController:this.controller,dateUtils:this.dateUtils,titleFormatter:this.settings.titleFormatters[this.state.currentView]||null}),header!==null&&$el(header.Component,header.props),$el(content.Component,{grid:content.props.gridGeneratorFn(),
currentView:this.state.currentView,calendarController:this.controller}))}}function newController(component){return{get currentView(){return component.state.currentView},get dateCursor(){return component.state.dateCursor},get settings(){return component.settings},get isCompactViewEnabled(){return component.state.isWindowNarrowerThanBreakPoint},changeView:(to)=>{return component.changeView(to)},openModal:(componentConstruct)=>{component.modal.open(componentConstruct)},closeModal:()=>{component.modal.close()}}}
const contentLayerFactory=new ContentLayerFactory;var nullcalendar$1={newCalendar:(el,settings)=>{return ReactDOM.render($el(CalendarLayout,settings),el).getController()},registerContentLayer:(name,layer)=>contentLayerFactory.register(name,layer),Calendar:CalendarLayout};return nullcalendar$1});
